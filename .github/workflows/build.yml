# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'docs/**'

permissions:
  contents: read

# https://stackoverflow.com/a/72408109/6388696
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-concurrency-to-cancel-any-in-progress-job-or-run
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  linting:
    name: Run linting/pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: pip install pre-commit
      - run: pre-commit --version
      - run: pre-commit install
      - run: pre-commit run --all-files

  unit_tests:
    needs: [linting]
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"
    - name: Install dependencies
      run: poetry install
    - name: Run tests (CPU)
      env:
        JAX_PLATFORMS: cpu
      run: poetry run pytest -v --cov=project --cov-report=xml --cov-append

    - name: Store coverage report as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-unit-tests-${{ matrix.platform }}-${{ matrix.python-version }}
        path: ./coverage.xml

  gpu_tests:
    needs: [unit_tests]
    runs-on: self-hosted
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.12']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"
    - run: pip install poetry
    - name: Install dependencies
      run: poetry install

    - name: Test with pytest
      run: poetry run pytest -v --cov=project --cov-report=xml --cov-append

    - name: Store coverage report as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-integration-tests-${{ matrix.python-version }}
        path: ./coverage.xml

  # https://about.codecov.io/blog/uploading-code-coverage-in-a-separate-job-on-github-actions/
  upload-coverage-codecov:
    needs: [unit_tests, gpu_tests]
    runs-on: ubuntu-latest
    name: Upload coverage reports to Codecov
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-reports-*
          merge-multiple: false
          # download all the artifacts in this directory (each .coverage.xml will be in a subdirectory)
          # Next step if this doesn't work would be to give the coverage files a unique name and use merge-multiple: true
          path: coverage_reports
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage_reports
          fail_ci_if_error: true
